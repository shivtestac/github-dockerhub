name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main  # Trigger pipeline on pushes to the main branch

env:
  DOCKER_REGISTRY: "pampdi"
  IMAGE_TAG: "latest"
  REMOTE_HOST: "125.17.72.92"
  DOCKER_USER: "shivtestac"
  DOCKER_PASSWORD: "Testac@12345"
  PRIVATE_KEY: ${{ secrets.KEY }} 

jobs:
  build_image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Log in to Docker Hub
      run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin

    - name: Build and Push Docker Image
      run: |
        docker build -t $DOCKER_REGISTRY:$IMAGE_TAG .
        docker push $DOCKER_REGISTRY:$IMAGE_TAG

  deploy_container:
    name: Deploy Docker Container
    runs-on: ubuntu-latest
    needs: build_image
    steps:
    - name: Set up SSH key
      run: |
        echo "$PRIVATE_KEY" > private_key
        chmod 600 private_key

    - name: Deploy to Remote Server
      run: |
        ssh -o StrictHostKeyChecking=no -i private_key root@$REMOTE_HOST << EOF
          export DOCKER_USER=$DOCKER_USER
          export DOCKER_REGISTRY=$DOCKER_REGISTRY
          export IMAGE_TAG=$IMAGE_TAG
          export DOCKER_PASSWORD=$DOCKER_PASSWORD

          echo "--------------------------------------"
          echo "DOCKER_USER: \$DOCKER_USER"
          echo "DOCKER_REGISTRY: \$DOCKER_REGISTRY"
          echo "IMAGE_TAG: \$IMAGE_TAG"
          echo "--------------------------------------"

          echo "\$DOCKER_PASSWORD" | docker login -u "\$DOCKER_USER" --password-stdin
          docker pull \$DOCKER_REGISTRY:\$IMAGE_TAG
          
          # Stop and remove previous containers
          docker ps -a --filter "name=^web2$" --format "{{.ID}}" | xargs -r -I {} docker rm -f {}
          docker ps -a --filter "name=^web1$" --format "{{.ID}}" | xargs -r -I {} docker container rename {} web2
          docker ps -a --filter "name=^web$" --format "{{.ID}}" | xargs -r -I {} docker container stop {}
          docker ps -a --filter "name=^web$" --format "{{.ID}}" | xargs -r -I {} docker container rename {} web1
          docker ps -a --filter "name=^web$" --format "{{.ID}}" | xargs -r -I {} docker container rm -f {}

          # Run new container
          docker run -d --name web -p 80:80 \$DOCKER_REGISTRY:\$IMAGE_TAG
        EOF

